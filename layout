> Exercise 1: <h1> is a block element. Add a display: inline declaration to your CSS rule for h1 -- what happens?
> Exercise 2: <strong> is an inline element. Consider the following HTML: <p>This is a paragraph with <strong>strong text</strong> 
> inside it.</p>. What happens when you create a strong CSS rule with display: block?

- For Exercise 1L If I put it right above "background: orange", it highlights the "background: orange" text and in the Atom document, 
and makes the orange box disappear in the web document. If I put it below "transition: color", nothing happens.

For Ex 2, it was just normal text that appeared under my previous list.

I searched online because I thought I was doing something wrong and ran across 
https://www.w3schools.com/csSref/tryit.asp?filename=trycss_display
and it gives the examples of the different display elements and explains that the element rearranges the text
in the document different ways. Inline continues the text without and breaks for paragraphs and block allows
you to handle the text in blocks. 


> Exercise 3: Create two block-level elements, perhaps <div> elements, with id=left and id=right respectively.
> Set position: absolute on both of them, then set width: 400px; on the left element, and set left: 400px; on the right.
> How does it look? (Columns, right! Kind of? What happens when you change the width of your window?)

- The absolute position puts it at that position permanently regardless of how big the window is.

> Exercise 4: Create a <div id="container"> element with an <h1> element, an <img> element, and a <p> element inside it. 
> Set display: flex on #container in your CSS. What do you see?

- It organizes all the elements in the containter! They all flow across the screen.
